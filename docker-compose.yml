version: '3.8'

networks:
  netdc1:
    driver: bridge

services:

  service1:
    build:
      context: ./service1
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:8081"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - service1-data:/path/to/service1/data
    networks:
      - netdc1

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - client-data:/path/to/client/data
    networks:
      - netdc1

  react:
    build:
      context: ./react_client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - react-data:/path/to/react/data
    networks:
      - netdc1

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - auth-data:/path/to/auth/data
    networks:
      - netdc1

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: db1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - netdc1

  loghandler:
    build:
      context: ./loghandler
      dockerfile: Dockerfile
    #restart: always
    restart: on-failure
    ports:
      - "8083:8083"
    depends_on:
      - mongodb
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - loghandler-data:/path/to/loghandler/data
    networks:
      - netdc1

  amqp1:
    build:
      context: ./amqp1
      dockerfile: Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - netdc1

  mongodb:
    image: 'mongo:latest'
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb-data:/data/db
    networks:
      - netdc1

  rabbitmq:
    image: "rabbitmq:3-management"
    restart: always
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - netdc1

volumes:
  service1-data:
  client-data:
  react-data:
  auth-data:
  postgres-data:
  loghandler-data:
  mongodb-data:
